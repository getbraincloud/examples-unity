%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 2dd0f747ddd6df94b8598f9bed2a0fde, type: 3}
  m_Name: EntityService
  m_EditorClassIdentifier: 
  ServiceName: Entity
  ServiceDescription: "User Entities (also called Player Entities) are full json
    objects (similar to Global Entities) except that are private to a brainCloud
    user. User entities can be as simple or complex as you would like.\r\n\r\nAll
    User Entities:\r\n \u2022 have a unique entityId, generated by brainCloud\r\n
    \u2022 have a developer-defined entityType (string)\r\n \u2022 have a version
    to help control updates\r\n \u2022 have a json data section for developer-defined
    content\r\n \u2022 are by default private to a user, though can be set as shareable
    via acl\r\n\r\nUser Entities are normally retrieved in bulk after a user logs
    in, and then updated in real-time as the user interacts with them.\r\n\r\nNote
    that User Entities are by default private (only accessible by the owner), but
    you can make the accessible to other users via the GetSharedEntityForProfileId
    and GetSharedEntitiesForProfileId APIs. To do so, you must make them shareable
    to others via the ACL settings.\r\n\r\nUser Entity methods are organized into
    the following categories:\r\n \u2022 Core Access - the basic user entity methods\r\n
    \u2022 Singleton - for accessing entities as a singleton - useful for when there
    will only ever be a single entity of that type.\r\n \u2022 Shared Data - used
    for accessing the shared user entities of another user"
  ServiceAPILink: https://getbraincloud.com/apidocs/apiref/?csharp#capi-entity
  ServicePrefab: {fileID: 1876719549554092462, guid: 3594e143a3dfae7488b6fefd7b70bf41, type: 3}
